
A Nodejs org mode parser module

Usage example:
# Look  http://orgmode.org/manual/Code-block-specific-header-arguments.html
# for the syntax, anyway org-babel-tangle
# will export this soruce
#+BEGIN_SRC javascript -n -r  :tangle basic-example.js
var orgParser=require('org-mode-parser');
orgParser.makelist("README.org", function (nodelist){
   // Here nodelist is a list of Orgnode objects (ref:putyourcode)
   console.dir(nodelist);
});
#+END_SRC
In the line [[(putyourcode)]] you are free to process the nodes in order.

* API
The main entry point is the makelist function, which accept a filename and a callback function.
makelist() will pass to the function the list of parsed nodes as first parameter


* RELEASE NOTES
** ORG_MODE_PARSER_0.0.1 :published:
First revision
** ORG_MODE_PARSER_0.0.2 :dev:
  1) SCHEDULE,DEADLINE and CLOCK directives now are correctly parsed
  2) Added a performance watchdog to track slowdowns
  3) Added the ability to return performance data via makelist
  4) Started restructuring parser for better performance.
  5) Minor API Change: null is the default value for tag,priority,scheduled, deadline 
     when not set.
     e.tags.existingtag is true if existingtag is there.
     Anyway is better to use 
       "existingtag" in e.tags
     which is a better syntax


#+TITLE:     README.org
#+AUTHOR:    Giovanni Giorgi
#+EMAIL:     jj@gioorgi.com
#+DATE:      2011-10-04 Tue
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
